<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Map Viewer - {{ page_name }}</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        body, html {
            margin: 0;
            padding: 0;
            height: 100%;
            overflow: hidden;
            font-family: Arial, sans-serif;
        }
        .header-bg {
            background-color: #f8f9fa;
            width: 100%;
        }
        .main-container {
            max-width: 900px;
            margin: 0 auto;
            background-color: #f8f9fa;
        }
        .toolbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 20px;
            height: 60px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.08);
            width: 100%;
            box-sizing: border-box;
            background: white;
        }
        .toolbar-left {
            display: flex;
            align-items: center;
            gap: 15px;
        }
        .toolbar-right {
            display: flex;
            align-items: center;
        }
        .dropdown {
            position: relative;
            display: inline-block;
        }
        .dropdown-toggle {
            background-color: #f8f9fa;
            color: #2c3e50;
            padding: 8px 16px;
            border: 1px solid #e0e3e8;
            border-radius: 8px;
            cursor: pointer;
            min-width: 220px;
            text-align: left;
            font-size: 15px;
            font-weight: 500;
            display: flex;
            justify-content: space-between;
            align-items: center;
            transition: all 0.2s ease;
            box-shadow: 0 1px 3px rgba(0,0,0,0.05);
        }
        .dropdown-toggle:hover {
            border-color: #4CAF50;
            box-shadow: 0 2px 6px rgba(76, 175, 80, 0.2);
        }
        .dropdown-toggle:after {
            content: '▼';
            font-size: 10px;
            margin-left: 12px;
            transition: transform 0.2s ease;
        }
        .dropdown:hover .dropdown-toggle:after {
            transform: rotate(180deg);
        }
        .dropdown-menu {
            display: none;
            position: absolute;
            background-color: white;
            min-width: 240px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.12);
            border-radius: 8px;
            z-index: 1000;
            max-height: 400px;
            overflow-y: auto;
            margin-top: 8px;
            border: 1px solid #e9ecef;
            animation: fadeIn 0.15s ease-out;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-5px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .dropdown-menu a {
            color: #2c3e50;
            padding: 10px 16px;
            text-decoration: none;
            display: block;
            border-bottom: 1px solid #f1f3f5;
            transition: all 0.15s ease;
            font-size: 14px;
        }
        .dropdown-menu a:hover {
            background-color: #f8f9fa;
            padding-left: 20px;
            color: #4CAF50;
        }
        .dropdown-menu a.active {
            background-color: #e8f5e9;
            color: #2e7d32;
            font-weight: 500;
            border-left: 3px solid #4CAF50;
        }
        .dropdown:hover .dropdown-menu {
            display: block;
        }
        .content-area {
            padding: 20px 20px;
            border-bottom: 1px solid #edf2f7;
            width: 100%;
            box-sizing: border-box;
            background: white;
            min-height: 120px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .content-wrapper {
            display: flex;
            align-items: flex-start;
            max-width: 1200px;
            margin: 0 0 0 -15px;
            gap: 0px;
            width: calc(100% + 15px);
            padding: 5px 0 0 0;
        }
        .icon-container {
            display: flex;
            align-items: flex-start;
            justify-content: center;
            padding-right: 5px;
            padding-left: 0;
            height: 100%;
            padding-top: 5px; /* Align with first line of text */
        }
        .text-content {
            flex: 1;
            display: flex;
            flex-direction: column;
            justify-content: center;
        }
        .indicator-title {
            margin: 0 0 8px 0;
            color: #1a365d;
            font-size: 1.8em;
            font-weight: 600;
            letter-spacing: -0.3px;
        }
        .indicator-description {
            margin: 0;
            color: #4a5568;
            line-height: 1.6;
            max-width: 800px;
            font-size: 1.05em;
            opacity: 0.9;
        }
        .indicator-icon {
            font-size: 4em;
            color: #4CAF50;
            opacity: 0.9;
            transition: all 0.2s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            min-width: 100px;
            height: 100%;
        }
        .indicator-icon:hover {
            transform: scale(1.05);
            opacity: 1;
        }
        .title-container {
            display: flex;
            align-items: center;
            margin-bottom: 8px;
        }
    <div class="map-container">
        <iframe id="map1" class="map-iframe" src="{{ map1_url }}" style="display: block;"></iframe>
        <iframe id="map2" class="map-iframe" src="{{ map2_url }}" style="display: none;"></iframe>
    </div>
            border: none;
            position: absolute;
            top: 0;
            left: 0;
        }
        
        .map-iframe:not(.active) {
            display: none;
        }
        
        .content-container {
            background: white;
            min-height: 100px;
            border-top: 1px solid #edf2f7;
            padding: 20px;
            max-width: 1200px;
            margin: 0 auto;
        }
        
        /* Carousel Styles */
        .carousel-container {
            position: relative;
            max-width: 100%;
            margin: 20px auto;
            overflow: hidden;
        }
        
        .carousel-track {
            display: flex;
            transition: transform 0.5s ease;
            gap: 20px;
            padding: 10px 0;
        }
        
        .post-card {
            background: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            transition: transform 0.2s ease;
            min-width: 300px;
            flex: 0 0 auto;
        }
        
        .carousel-nav {
            display: flex;
            justify-content: center;
            margin-top: 15px;
            gap: 10px;
        }
        
        .carousel-dot {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background: #e2e8f0;
            border: none;
            cursor: pointer;
            padding: 0;
        }
        
        .carousel-dot.active {
            background: #4CAF50;
        }
        .toggle-container {
            display: flex;
            align-items: center;
            margin-left: 20px;
            gap: 12px;
        }
        .toggle-label {
            font-size: 14px;
            font-weight: 500;
            color: #4a5568;
            transition: color 0.2s ease;
        }
        .toggle-label.active {
            color: #2c3e50;
            font-weight: 600;
        }
        .toggle-switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 30px;
        }
        .toggle-switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }
        .toggle-slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #e2e8f0;
            transition: .4s;
            border-radius: 34px;
        }
        .toggle-slider:before {
            position: absolute;
            content: "";
            height: 24px;
            width: 24px;
            left: 3px;
            bottom: 3px;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .toggle-slider {
            background-color: #4CAF50;
            opacity: 0.7;
        }
        input:checked + .toggle-slider:before {
            transform: translateX(30px);
        }
        input:focus + .toggle-slider {
            box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.3);
        }
    </style>
</head>
<body>
    <div class="header-bg">
        <div class="main-container">
            <div class="toolbar">
        <div class="toolbar-left">
            <div class="dropdown">
                <button class="dropdown-toggle" id="indicatorDropdown">Select Indicator</button>
                <div class="dropdown-menu" id="indicatorMenu">
                    {% for indicator, data in indicators.all.items %}
                    <a href="{{ indicator }}.html" {% if indicator == page_name %}class="active"{% endif %}>{{ data.title }}</a>
                    {% endfor %}
                </div>
            </div>
        </div>
        <div class="toolbar-right">
            <div class="toggle-container">
                <span id="exploreLabel" class="toggle-label active">Explore</span>
                <label class="toggle-switch">
                    <input type="checkbox" id="viewToggle">
                    <span class="toggle-slider"></span>
                </label>
                <span id="analyzeLabel" class="toggle-label">Analyze</span>
            </div>
        </div>
    </div>
    <div class="content-area">
        <div class="content-wrapper">
            <div class="icon-container">
                <div class="indicator-icon">
                    <i class="fas {{ indicators.page_name.icon }}"></i>
                </div>
            </div>
            <div class="text-content">
                <h1 class="indicator-title">{{ indicators.page_name.title }}</h1>
                <p class="indicator-description">{{ indicators.page_name.description }}</p>
            </div>
        </div>
        </div>

    <!-- WordPress Posts Carousel -->
    <div class="content-container">
        <div id="wordpress-posts">
            <h2 style="color: #1a365d; margin-bottom: 20px; text-align: center;">Related Resources</h2>
            <div class="carousel-container">
                <div class="carousel-track" id="posts-list">
                    <!-- Posts will be loaded here -->
                </div>
                <div class="carousel-nav" id="carousel-nav">
                    <!-- Navigation dots will be added here -->
                </div>
            </div>
        </div>
    </div>

    <style>
        .post-card {
            background: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            transition: transform 0.2s ease;
        }
        .post-card:hover {
            transform: translateY(-5px);
        }
        .post-image {
            width: 100%;
            height: 200px;
            object-fit: cover;
        }
        .post-content {
            padding: 15px;
        }
        .post-title {
            margin: 0 0 10px 0;
            font-size: 1.2em;
        }
        .post-excerpt {
            color: #4a5568;
            font-size: 0.9em;
            margin-bottom: 15px;
        }
        .post-meta {
            font-size: 0.8em;
            color: #718096;
            display: flex;
            justify-content: space-between;
        }
    </style>

    <script>
    // Carousel functionality
    let currentSlide = 0;
    let slidesPerView = 3;
    let slides = [];
    
    function updateCarousel() {
        const track = document.querySelector('.carousel-track');
        const nav = document.getElementById('carousel-nav');
        
        // Calculate how many slides to show based on viewport width
        const viewportWidth = window.innerWidth;
        if (viewportWidth < 768) {
            slidesPerView = 1;
        } else if (viewportWidth < 1024) {
            slidesPerView = 2;
        } else {
            slidesPerView = 3;
        }
        
        // Update track position
        const slideWidth = 100 / slidesPerView;
        track.style.transform = `translateX(-${currentSlide * slideWidth}%)`;
        
        // Update navigation dots
        if (nav) {
            nav.innerHTML = '';
            const totalSlides = Math.ceil(slides.length / slidesPerView);
            
            for (let i = 0; i < totalSlides; i++) {
                const dot = document.createElement('button');
                dot.className = `carousel-dot ${i === Math.floor(currentSlide / slidesPerView) ? 'active' : ''}`;
                dot.addEventListener('click', () => {
                    goToSlide(i * slidesPerView);
                });
                nav.appendChild(dot);
            }
        }
    }
    
    function goToSlide(index) {
        const track = document.querySelector('.carousel-track');
        if (!track) return;
        
        const maxSlide = Math.max(0, slides.length - slidesPerView);
        currentSlide = Math.min(Math.max(0, index), maxSlide);
        updateCarousel();
    }
    
    function nextSlide() {
        goToSlide(currentSlide + slidesPerView);
    }
    
    function prevSlide() {
        goToSlide(currentSlide - slidesPerView);
    }
    
    // Make carousel responsive
    window.addEventListener('resize', updateCarousel);
    
    // Function to fetch WordPress posts by tag
    async function fetchWordPressPosts() {
        const postsContainer = document.getElementById('posts-list');
        if (!postsContainer) return;
        
        try {
            // Use the hardcoded tag ID for 'indicator-one'
            const response = await fetch('https://newdev.naturesquamish.ca/wp-json/wp/v2/posts?tags=52&_embed');
            
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            
            const posts = await response.json();
            
            if (!posts || posts.length === 0) {
                postsContainer.innerHTML = '<p>No related resources found.</p>';
                return;
            }
            
            // Create HTML for each post
            postsContainer.innerHTML = posts.map(post => {
                // Get featured image URL or use a placeholder
                const imageUrl = post._embedded?.['wp:featuredmedia']?.[0]?.source_url || 'https://via.placeholder.com/400x200?text=No+Image';
                const excerpt = post.excerpt.rendered ? 
                    post.excerpt.rendered.replace(/<[^>]*>?/gm, '').substring(0, 150) + '...' : 
                    'No excerpt available';
                
                return `
                    <article class="post-card">
                        <a href="${post.link}" target="_blank" style="text-decoration: none; color: inherit;">
                            <img src="${imageUrl}" alt="${post.title.rendered || 'Post image'}" class="post-image">
                            <div class="post-content">
                                <h3 class="post-title">${post.title.rendered || 'Untitled Post'}</h3>
                                <div class="post-excerpt">${excerpt}</div>
                                <div class="post-meta">
                                    <span>Read More</span>
                                    <span>${post.date ? new Date(post.date).toLocaleDateString() : ''}</span>
                                </div>
                            </div>
                        </a>
                    </article>
                `;
            }).join('');
            
        } catch (error) {
            console.error('Error fetching WordPress posts:', error);
            const errorMsg = error instanceof Error ? error.message : 'Unknown error';
            postsContainer.innerHTML = `<p>Error loading resources: ${errorMsg}</p>`;
        }
    }
    
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize map variables
        const map1 = document.getElementById('map1');
        const map2 = document.getElementById('map2');
        const toggleSwitch = document.getElementById('viewToggle');
        const exploreLabel = document.getElementById('exploreLabel');
        const analyzeLabel = document.getElementById('analyzeLabel');
        
        // Function to switch between map views
        function switchView(view) {
            if (view === 'explore') {
                if (map1) map1.style.display = 'block';
                if (map2) map2.style.display = 'none';
                if (exploreLabel) exploreLabel.classList.add('active');
                if (analyzeLabel) analyzeLabel.classList.remove('active');
                if (toggleSwitch) toggleSwitch.checked = false;
            } else {
                if (map1) map1.style.display = 'none';
                if (map2) map2.style.display = 'block';
                if (exploreLabel) exploreLabel.classList.remove('active');
                if (analyzeLabel) analyzeLabel.classList.add('active');
                if (toggleSwitch) toggleSwitch.checked = true;
            }
        }

        // Set up event listeners
        if (toggleSwitch) {
            toggleSwitch.addEventListener('change', function() {
                switchView(this.checked ? 'analyze' : 'explore');
            });
        }
        
        // Set initial view
        switchView('explore');
        
        // Fetch WordPress posts after a short delay
        setTimeout(fetchWordPressPosts, 500);
    });
    // Function to fetch WordPress posts by tag
    async function fetchWordPressPosts() {
        const postsContainer = document.getElementById('posts-list');
        if (!postsContainer) return;
        
        try {
            // Use the hardcoded tag ID for 'indicator-one'
            const response = await fetch('https://newdev.naturesquamish.ca/wp-json/wp/v2/posts?tags=52&_embed');
            
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            
            const posts = await response.json();
            
            if (!posts || posts.length === 0) {
                postsContainer.innerHTML = '<p>No related resources found.</p>';
                return;
            }
            
            // Create HTML for each post
            postsContainer.innerHTML = posts.map(post => {
                // Get featured image URL or use a placeholder
                const imageUrl = post._embedded?.['wp:featuredmedia']?.[0]?.source_url || 'https://via.placeholder.com/400x200?text=No+Image';
                const excerpt = post.excerpt.rendered ? 
                    post.excerpt.rendered.replace(/<[^>]*>?/gm, '').substring(0, 150) + '...' : 
                    'No excerpt available';
                
                return `
                    <article class="post-card">
                        <a href="${post.link}" target="_blank" style="text-decoration: none; color: inherit;">
                            <img src="${imageUrl}" alt="${post.title.rendered || 'Post image'}" class="post-image">
                            <div class="post-content">
                                <h3 class="post-title">${post.title.rendered || 'Untitled Post'}</h3>
                                <div class="post-excerpt">${excerpt}</div>
                                <div class="post-meta">
                                    <span>Read More</span>
                                    <span>${post.date ? new Date(post.date).toLocaleDateString() : ''}</span>
                                </div>
                            </div>
                        </a>
                    </article>
                `;
            }).join('');
            
        } catch (error) {
            console.error('Error fetching WordPress posts:', error);
            const errorMsg = error instanceof Error ? error.message : 'Unknown error';
            postsContainer.innerHTML = `<p>Error loading resources: ${errorMsg}</p>`;
        }
    }
    
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize map variables
        const map1 = document.getElementById('map1');
        const map2 = document.getElementById('map2');
        const toggleSwitch = document.getElementById('viewToggle');
        
        // Make sure map elements exist before using them
        if (map1 && map2) {
            // Your existing map initialization code here
            function switchView(view) {
                if (view === 'explore') {
                    map1.classList.add('active');
                    map2.classList.remove('active');
                    document.querySelector('.explore-label').classList.add('active');
                    document.querySelector('.analyze-label').classList.remove('active');
                    toggleSwitch.checked = false;
                } else {
                    map1.classList.remove('active');
                    map2.classList.add('active');
                    document.querySelector('.explore-label').classList.remove('active');
                    document.querySelector('.analyze-label').classList.add('active');
                    toggleSwitch.checked = true;
                }
            }

            if (toggleSwitch) {
                toggleSwitch.addEventListener('change', function() {
                    // Set initial view
        switchView('explore');
        
        // Ensure maps are properly sized and visible
        if (map1) {
            map1.style.display = 'block';
            map1.style.width = '100%';
            map1.style.height = '100%';
        }
        
        if (map2) {
            map2.style.display = 'none';
            map2.style.width = '100%';
            map2.style.height = '100%';
        }
        
        // Initialize carousel after posts are loaded
        fetchWordPressPosts().then(() => {
            updateCarousel();
            
            // Add navigation arrows
            const carouselContainer = document.querySelector('.carousel-container');
            if (carouselContainer) {
                // Left arrow
                const prevBtn = document.createElement('button');
                prevBtn.innerHTML = '❮';
                prevBtn.style.cssText = 'position: absolute; left: 10px; top: 50%; transform: translateY(-50%); background: rgba(255,255,255,0.8); border: none; border-radius: 50%; width: 40px; height: 40px; font-size: 20px; cursor: pointer; z-index: 10; box-shadow: 0 2px 5px rgba(0,0,0,0.2);';
                prevBtn.addEventListener('click', prevSlide);
                
                // Right arrow
                const nextBtn = document.createElement('button');
                nextBtn.innerHTML = '❯';
                nextBtn.style.cssText = 'position: absolute; right: 10px; top: 50%; transform: translateY(-50%); background: rgba(255,255,255,0.8); border: none; border-radius: 50%; width: 40px; height: 40px; font-size: 20px; cursor: pointer; z-index: 10; box-shadow: 0 2px 5px rgba(0,0,0,0.2);';
                nextBtn.addEventListener('click', nextSlide);
                
                carouselContainer.style.position = 'relative';
                carouselContainer.appendChild(prevBtn);
                carouselContainer.appendChild(nextBtn);
                    map1.classList.add('active');
                    map2.classList.remove('active');
                    exploreLabel.classList.add('active');
                    analyzeLabel.classList.remove('active');
                    toggleSwitch.checked = false;
                    currentView = 'explore';
                } else {
                    map1.classList.remove('active');
                    map2.classList.add('active');
                    exploreLabel.classList.remove('active');
                    analyzeLabel.classList.add('active');
                    toggleSwitch.checked = true;
                    currentView = 'analyze';
                }
            }

            toggleSwitch.addEventListener('change', function() {
                if (this.checked) {
                    switchView('analyze');
                } else {
                    switchView('explore');
                }
            });

            // Also make the labels clickable
            exploreLabel.addEventListener('click', function() {
                if (currentView !== 'explore') {
                    switchView('explore');
                }
            });

            analyzeLabel.addEventListener('click', function() {
                if (currentView !== 'analyze') {
                    switchView('analyze');
                }
            });
        });
    </script>
</body>
</html>
